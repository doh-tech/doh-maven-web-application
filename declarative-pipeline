@Library('dohsharelibs') _

pipeline{
    
    agent any

    
     tools{
     maven 'maven3.9.0'
     }
     triggers {
  pollSCM ('* * * * *')
}
options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  timestamps()
}

    
    stages{
        
    stage('GitdownLoad'){
        
      steps{
          sendSlackNotifications('STARTED')
         git branch: 'development ', url: 'https://github.com/doh-tech/doh-maven-web-application.git' 
      }
    }
    stage('Building The Code'){
     steps{
        sh "mvn clean package"   
     }
      
    }
    //Executing SonarQube report
    stage('SonarQubeReport'){
        steps{
        sh "mvn clean sonar:sonar"
        }
    }
    //Ofload Artifact Into Nexus
    stage('Ofloadingto nexus'){
        steps{
        sh "mvn clean deploy"
        }
    }
     
     
     
     
}//clossing stages
post {
  success {
    sendSlackNotifications(currentBuild.result)
  }
  failure {
     sendSlackNotifications(currentBuild.result)
  }
}


}//clossing pipeline
/*
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  //This is the condition which we are checking weather buildStatus is SUCCESSFULL or not.
 //This line updated to show the Eclipse with GitHub demo
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Calling the slackSend function to Send notifications.
  slackSend (color: colorCode, message: summary, channel: '#doh-project')
}
*/
